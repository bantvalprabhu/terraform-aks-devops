trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: TerraformValidate
  jobs:
    - job: TerraformValidateJob
      continueOnError: false
      steps:
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/terraform-manifests'
          artifact: 'terraform-manifests-out'
          publishLocation: 'pipeline'
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        inputs:
          terraformVersion: 'latest'
      - task: TerraformCLI@0
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
          backendType: 'azurerm'
          backendServiceArm: 'terraform-azure-aks-sc'
          ensureBackend: true
          backendAzureRmResourceGroupName: 'rg-terraform-backend'
          backendAzureRmResourceGroupLocation: 'eastus'
          backendAzureRmStorageAccountName: 'demoterraformaksbackend'
          backendAzureRmStorageAccountSku: 'Standard_LRS'
          backendAzureRmContainerName: 'tfstatefile'
          backendAzureRmKey: 'aks-base.tfstate'
          allowTelemetryCollection: false
      - task: TerraformCLI@0
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
          allowTelemetryCollection: false
      
